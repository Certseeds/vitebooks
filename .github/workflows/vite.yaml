name: github pages

on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '3.5'

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "./depage/rustydeps"

      - name: scan and append names.txt
        run: |
          pnpm \
            exec node \
            --experimental-strip-types \
            --experimental-transform-types \
             ./.vitepress/run-listname.ts

      - name: add wasm32-unknown-unknown target
        run: rustup target add wasm32-unknown-unknown

      - name: build rustydeps
        working-directory: ./depage/rustydeps
        run: |
          cargo install --path . --locked --profile dev
          cargo build --release
          wasm-pack build --target web --release
          cp ./target/release/toepub ./../../.vitepress/toepub.exe

      - name: Install dependencies
        run: pnpm install
      
      - name: install dependencies depage
        working-directory: ./depage
        run: pnpm install

      - name: scan and build meta.tgz, epubs
        env:
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo 'Run number: $RUN_NUMBER'
          pnpm exec node ./.vitepress/maketgz.js $RUN_NUMBER

      - name: scan and get epub page
        run: |
          pnpm \
            exec node \
            --experimental-strip-types \
            --experimental-transform-types \
            ./.vitepress/run-epublist.ts
  
      - name: build depage
        working-directory: ./depage
        run: pnpm build

      - name: cp depage
        run: |
          mkdir -p ./public/depage
          cp -r ./depage/dist/* ./public/depage/

      - name: build
        run: pnpm run docs:build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.vitepress/dist

      - name: cp epub to cf-public
        run: |
          sudo apt-get update
          sudo apt-get install rename
          mkdir -p ./cf-public/epub
          mkdir -p ./cf-public/stable/epub
          cp ./*.epub ./cf-public/epub
          cp ./*.epub ./cf-public/stable/epub
          rename \
            's/(.*)-[0-9]{4}-[0-9]{8}\.epub$/$1.epub/' \
            ./cf-public/stable/epub/*.epub

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./cf-public  --branch="main" --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }} --commit-dirty=true

  # Deployment job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4